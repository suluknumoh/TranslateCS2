//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TranslateCS2.Mod.Properties.I18N {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class I18NMod {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal I18NMod() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TranslateCS2.Mod.Properties.I18N.I18NMod", typeof(I18NMod).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently selected language within the default interface settings..
        /// </summary>
        internal static string CurrentLanguageDescription {
            get {
                return ResourceManager.GetString("CurrentLanguageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current language.
        /// </summary>
        internal static string CurrentLanguageLabel {
            get {
                return ResourceManager.GetString("CurrentLanguageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a flavor for the current selected language..
        /// </summary>
        internal static string FlavorDescription {
            get {
                return ResourceManager.GetString("FlavorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flavor.
        /// </summary>
        internal static string FlavorLabel {
            get {
                return ResourceManager.GetString("FlavorLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exports the selected languages vanilla entries
        ///as UTF8 encoded .json-file (Key-Value-Pairs)
        ///to the selected destination.
        ///Values are taken from the .loc-file within the LocaleAsset-Database.
        ///Warnings:
        ///If the games respective .loc-file is manually overwritten, the export contains those values.
        ///Existing files within the Destination are going to be overwritten..
        /// </summary>
        internal static string GroupExportExportButtonDescription {
            get {
                return ResourceManager.GetString("GroupExportExportButtonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to export.
        /// </summary>
        internal static string GroupExportExportButtonLabel {
            get {
                return ResourceManager.GetString("GroupExportExportButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing files are going to be overwritten.
        ///Do you really want to export the selected language?.
        /// </summary>
        internal static string GroupExportExportButtonWarning {
            get {
                return ResourceManager.GetString("GroupExportExportButtonWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory the selected language gets exported to..
        /// </summary>
        internal static string GroupExportExportDirectoryDescription {
            get {
                return ResourceManager.GetString("GroupExportExportDirectoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination.
        /// </summary>
        internal static string GroupExportExportDirectoryLabel {
            get {
                return ResourceManager.GetString("GroupExportExportDirectoryLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the language to export..
        /// </summary>
        internal static string GroupExportExportDropDownDescription {
            get {
                return ResourceManager.GetString("GroupExportExportDropDownDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language to export.
        /// </summary>
        internal static string GroupExportExportDropDownLabel {
            get {
                return ResourceManager.GetString("GroupExportExportDropDownLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to export.
        /// </summary>
        internal static string GroupExportTitle {
            get {
                return ResourceManager.GetString("GroupExportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to flavors.
        /// </summary>
        internal static string GroupFlavorTitle {
            get {
                return ResourceManager.GetString("GroupFlavorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generates a .json-file named
        ///&apos;{0}&apos;
        ///with all Key-Value-Pairs for this Mod that can be found in this mods data-directory
        ///&apos;{1}&apos;
        ///after a click on this button.
        ///The .json-file named
        ///&apos;{0}&apos;
        ///is NOT read by this Mod.
        ///It enables you to integrate the included key-value pairs into a corresponding language file and to translate the entries for this Mod..
        /// </summary>
        internal static string GroupGenerateButtonGenerateDescription {
            get {
                return ResourceManager.GetString("GroupGenerateButtonGenerateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to generate localization json.
        /// </summary>
        internal static string GroupGenerateButtonGenerateLabel {
            get {
                return ResourceManager.GetString("GroupGenerateButtonGenerateLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to generates two log entries. one with the markdown for readme.md and one for an internal list.
        /// </summary>
        internal static string GroupGenerateButtonLogMarkdownAndCultureInfoNamesDescription {
            get {
                return ResourceManager.GetString("GroupGenerateButtonLogMarkdownAndCultureInfoNamesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to log Markdown and CultureInfo-Names.
        /// </summary>
        internal static string GroupGenerateButtonLogMarkdownAndCultureInfoNamesLabel {
            get {
                return ResourceManager.GetString("GroupGenerateButtonLogMarkdownAndCultureInfoNamesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to log and generate.
        /// </summary>
        internal static string GroupGenerateTitle {
            get {
                return ResourceManager.GetString("GroupGenerateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reloads the language file(s) that existed at startup.
        ///Does not unload language files.
        ///Does not load new language files.
        ///Files have to be located within this directory &apos;{0}&apos;.
        /// </summary>
        internal static string GroupReloadButtonReloadDescription {
            get {
                return ResourceManager.GetString("GroupReloadButtonReloadDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to reload language files.
        /// </summary>
        internal static string GroupReloadButtonReloadLabel {
            get {
                return ResourceManager.GetString("GroupReloadButtonReloadLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really want to reload the language file(s)?.
        /// </summary>
        internal static string GroupReloadButtonReloadWarning {
            get {
                return ResourceManager.GetString("GroupReloadButtonReloadWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to reload.
        /// </summary>
        internal static string GroupReloadTitle {
            get {
                return ResourceManager.GetString("GroupReloadTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to settings.
        /// </summary>
        internal static string GroupSettingsTitle {
            get {
                return ResourceManager.GetString("GroupSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mod is able to sideload unofficial locales that are provided by other mods.
        ///If this box is checked, this mod loads those locales from other mods.
        ///If this box is not checked, it does not load locales from other mods.
        ///It is safe, to check this box.
        ///The Translation(s) provided within this mods data-directory rule and won&apos;t be overwritten..
        /// </summary>
        internal static string GroupSettingsToggleLoadFromOtherModsDescription {
            get {
                return ResourceManager.GetString("GroupSettingsToggleLoadFromOtherModsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load from other mods.
        /// </summary>
        internal static string GroupSettingsToggleLoadFromOtherModsLabel {
            get {
                return ResourceManager.GetString("GroupSettingsToggleLoadFromOtherModsLabel", resourceCulture);
            }
        }
    }
}
