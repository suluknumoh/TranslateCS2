<ContentControl
    x:Class="TranslateCS2.Controls.Imports.ImportControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:TranslateCS2.Controls.Imports"
    mc:Ignorable="d"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:app_configurationmanager="clr-namespace:TranslateCS2.Configurations"
    xmlns:binding_enums="clr-namespace:TranslateCS2.BindingEnums"
    xmlns:import_models="clr-namespace:TranslateCS2.Models.Imports"
    xmlns:app_properties="clr-namespace:TranslateCS2.Properties"
    prism:ViewModelLocator.AutoWireViewModel="True"
    x:Name="ICC">
    <Grid
        HorizontalAlignment="Stretch"
        VerticalAlignment="Top"
        ShowGridLines="False">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TextBlock
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="4"
            Style="{StaticResource StyleHeading}"
            Text="{Binding Source={x:Static app_properties:I18N.StringImport}, Mode=OneWay}">
        </TextBlock>
        <StackPanel
            Grid.Row="1"
            Grid.Column="0"
            Orientation="Vertical"
            HorizontalAlignment="Center">
            <Button
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Margin="10 10 10 10"
                Padding="5 5 5 5"
                Cursor="Hand"
                Command="{Binding SelectPathCommand}"
                IsEnabled="{Binding IsEnabled}">
                <StackPanel
                    Orientation="Vertical">
                    <Image
                        Source="/TranslateCS2;component/Assets/Icons/folder_open.png"
                        MaxHeight="64"
                        MaxWidth="64"/>
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        TextAlignment="Center"
                        Text="{Binding Source={x:Static app_properties:I18N.StringSelectFile}, Mode=OneWay}"/>
                </StackPanel>
            </Button>
            <TextBlock
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                TextAlignment="Left"
                Margin="10 10 10 10"
                Padding="5 5 5 5"
                TextWrapping="WrapWithOverflow"
                MaxWidth="300"
                Text="{Binding SelectedPath}">
            </TextBlock>
        </StackPanel>
        <Button
            Grid.Row="1"
            Grid.Column="1"
            Command="{Binding ReadCommand}"
            IsEnabled="{Binding IsReadButtonEnabled}"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Margin="10 10 10 10"
            Padding="5 5 5 5"
            Cursor="Hand">
            <StackPanel
                Orientation="Vertical">
                <Image
                    Source="/TranslateCS2;component/Assets/Icons/scan_text.png"
                    MaxHeight="64"
                    MaxWidth="64"/>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    TextAlignment="Center"
                    Text="{Binding Source={x:Static app_properties:I18N.StringRead}, Mode=OneWay}"/>
            </StackPanel>
        </Button>
        <StackPanel
            Grid.Row="1"
            Grid.Column="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            >
            <!--
                /// <seealso href="https://brianlagunas.com/a-better-way-to-data-bind-enums-in-wpf/"/>
                /// <seealso href="https://github.com/brianlagunas/BindingEnumsInWpf"/>
            -->
            <ComboBox
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsEnabled="{Binding IsPreviewAvailable}"
                ItemsSource="{Binding Source={binding_enums:EnumBindingSource {x:Type import_models:ImportModes}}}"
                SelectedItem="{Binding ImportMode}"/>
        </StackPanel>
        <Button
            Grid.Row="1"
            Grid.Column="3"
            Command="{Binding ImportCommand}"
            IsEnabled="{Binding IsImportButtonEnabled}"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Margin="10 10 10 10"
            Padding="5 5 5 5"
            Cursor="Hand">
            <StackPanel
                Orientation="Vertical">
                <Image
                    Source="/TranslateCS2;component/Assets/Icons/database_arrow_down.png"
                    MaxHeight="64"
                    MaxWidth="64"/>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    TextAlignment="Center"
                    Text="{Binding Source={x:Static app_properties:I18N.StringImport}, Mode=OneWay}"/>
            </StackPanel>
        </Button>
        <TextBlock
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="4"
            FontSize="16"
            FontWeight="Bold"
            Foreground="{Binding InfoMessageColor}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            TextAlignment="Center"
            TextWrapping="Wrap"
            Margin="10 10 10 10"
            Text="{Binding InfoMessage}"/>
        <DataGrid
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="4"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            AllowDrop="False"
            IsTextSearchEnabled="True"
            IsTextSearchCaseSensitive="False"
            SelectionMode="Single"
            ColumnHeaderHeight="30"
            SelectionUnit="Cell"
            ItemsSource="{Binding Preview}">
            <DataGrid.Style>
                <Style TargetType="DataGrid">
                    <Setter
                        Property="Visibility"
                        Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding IsPreviewAvailable}"
                            Value="True">
                            <Setter
                                Property="Visibility"
                                Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Style>
            <DataGrid.Columns>
                <DataGridTextColumn
                    Header="{Binding Source={x:Static app_properties:I18N.StringKeyCap}, Mode=OneWay}"
                    Binding="{Binding Key, Mode=OneWay}"
                    MinWidth="200"
                    Width="200"
                    MaxWidth="300"
                    IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter
                                Property="HorizontalContentAlignment"
                                Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn
                    Header="{Binding Source={x:Static app_properties:I18N.StringExistingTranslationCap}, Mode=OneWay}"
                    Binding="{Binding TranslationExisting, Mode=OneWay}"
                    MinWidth="100"
                    Width="400"
                    MaxWidth="500"
                    IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter
                                Property="HorizontalContentAlignment"
                                Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter
                                Property="Background"
                                Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                    Value="{x:Static import_models:ImportModes.NEW}">
                                    <Setter
                                        Property="Background"
                                        Value="LightSalmon"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                            Value="{x:Static import_models:ImportModes.LeftJoin}"/>
                                        <Condition
                                            Binding="{Binding IsTranslationExistingAvailable}"
                                            Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter
                                            Property="Background"
                                            Value="LightGreen"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                            Value="{x:Static import_models:ImportModes.LeftJoin}"/>
                                        <Condition
                                            Binding="{Binding IsTranslationExistingAvailable}"
                                            Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter
                                            Property="Background"
                                            Value="LightSalmon"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <!-- -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                            Value="{x:Static import_models:ImportModes.RightJoin}"/>
                                        <Condition
                                            Binding="{Binding IsTranslationImportedAvailable}"
                                            Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter
                                            Property="Background"
                                            Value="LightGreen"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                            Value="{x:Static import_models:ImportModes.RightJoin}"/>
                                        <Condition
                                            Binding="{Binding IsTranslationImportedAvailable}"
                                            Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter
                                            Property="Background"
                                            Value="LightSalmon"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn
                    Header="{Binding Source={x:Static app_properties:I18N.StringImportedTranslationCap}, Mode=OneWay}"
                    Binding="{Binding TranslationImported, Mode=OneWay}"
                    MinWidth="100"
                    Width="400"
                    MaxWidth="500"
                    IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter
                                Property="HorizontalContentAlignment"
                                Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter
                                Property="Background"
                                Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                    Value="{x:Static import_models:ImportModes.NEW}">
                                    <Setter
                                        Property="Background"
                                        Value="LightGreen"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                            Value="{x:Static import_models:ImportModes.LeftJoin}"/>
                                        <Condition
                                            Binding="{Binding IsTranslationExistingAvailable}"
                                            Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter
                                            Property="Background"
                                            Value="LightSalmon"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                            Value="{x:Static import_models:ImportModes.LeftJoin}"/>
                                        <Condition
                                            Binding="{Binding IsTranslationExistingAvailable}"
                                            Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter
                                            Property="Background"
                                            Value="LightGreen"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <!-- -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                            Value="{x:Static import_models:ImportModes.RightJoin}"/>
                                        <Condition
                                            Binding="{Binding IsTranslationExistingAvailable}"
                                            Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter
                                            Property="Background"
                                            Value="LightGreen"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                            Value="{x:Static import_models:ImportModes.RightJoin}"/>
                                        <Condition
                                            Binding="{Binding IsTranslationExistingAvailable}"
                                            Value="True"/>
                                        <Condition
                                            Binding="{Binding IsTranslationImportedAvailable}"
                                            Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter
                                            Property="Background"
                                            Value="LightGreen"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding ElementName=ICC, Path=DataContext.ImportMode}"
                                            Value="{x:Static import_models:ImportModes.RightJoin}"/>
                                        <Condition
                                            Binding="{Binding IsTranslationExistingAvailable}"
                                            Value="True"/>
                                        <Condition
                                            Binding="{Binding IsTranslationImportedAvailable}"
                                            Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter
                                            Property="Background"
                                            Value="LightSalmon"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</ContentControl>
