<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MessageAppUnusableWarning" xml:space="preserve">
    <value>This is a Test</value>
  </data>
  <data name="MessageConsistOfCharacters" xml:space="preserve">
    <value>Should only consist of characters, lower or uppercase, from a - z!</value>
  </data>
  <data name="MessageLocalizationFileOverwriteDifferentMerge" xml:space="preserve">
    <value>Localization file to overwrite must be a different ones than the ones you want to merge with!</value>
  </data>
  <data name="MessageLocalizationFileOverwriteOthersThan" xml:space="preserve">
    <value>Localization file to overwrite must be a different ones than</value>
  </data>
  <data name="MessageNotEmptyOrWhitespace" xml:space="preserve">
    <value>May not be emty or whitespaces!</value>
  </data>
  <data name="MessagePreparingTranslationExport" xml:space="preserve">
    <value>preparing translation for export</value>
  </data>
  <data name="MessageSelectLocalizationFileOverwrite" xml:space="preserve">
    <value>Select a localization file to overwrite!</value>
  </data>
  <data name="MessageTranslationReadyExport" xml:space="preserve">
    <value>translation is ready to export</value>
  </data>
  <data name="MessageTranslationSessionLocaleEnglish" xml:space="preserve">
    <value>localename in english</value>
  </data>
  <data name="MessageTranslationSessionLocaleLocalized" xml:space="preserve">
    <value>localename in your language</value>
  </data>
  <data name="MessageTranslationSessionMergeFile" xml:space="preserve">
    <value>if you only want to change some translations, tanslations within this file and yours are going to be merged; or if you want to create a new translation e.g. based on english, you'll get a mixed translation file</value>
  </data>
  <data name="MessageTranslationSessionName" xml:space="preserve">
    <value>a name for your translation session</value>
  </data>
  <data name="MessageTranslationSessionOverwriteFile" xml:space="preserve">
    <value>the localization file you want to sacrifice/overwrite. should be another language than english and the ones you want to merge; a language that you are unable to read/speak</value>
  </data>
  <data name="MessageUnderConstruction" xml:space="preserve">
    <value>under construction</value>
  </data>
  <data name="QuestionAreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="StringAutoDetectedInstallationDirectory" xml:space="preserve">
    <value>autodetected Cities: Skylines 2 - Installation Directory</value>
  </data>
  <data name="StringAutoDetectedLocFiles" xml:space="preserve">
    <value>autodetected .loc-files</value>
  </data>
  <data name="StringCountCap" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="StringCreate" xml:space="preserve">
    <value>create</value>
  </data>
  <data name="StringCreateNewSession" xml:space="preserve">
    <value>create
new
session</value>
  </data>
  <data name="StringCreditsCaps" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="StringEdit" xml:space="preserve">
    <value>edit</value>
  </data>
  <data name="StringEditByOccurancesCap" xml:space="preserve">
    <value>Edit by occurances</value>
  </data>
  <data name="StringEditCap" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="StringEditSelectedSession" xml:space="preserve">
    <value>edit
selected
session</value>
  </data>
  <data name="StringEnglishValueCap" xml:space="preserve">
    <value>EnglishValue</value>
  </data>
  <data name="StringExImportCap" xml:space="preserve">
    <value>Ex-/Import</value>
  </data>
  <data name="StringExport" xml:space="preserve">
    <value>export</value>
  </data>
  <data name="StringExportDialogTitle" xml:space="preserve">
    <value>export translations to JSON</value>
  </data>
  <data name="StringExported" xml:space="preserve">
    <value>exported</value>
  </data>
  <data name="StringExporting" xml:space="preserve">
    <value>exporting</value>
  </data>
  <data name="StringExportTranslation" xml:space="preserve">
    <value>export translation</value>
  </data>
  <data name="StringFilterKeys" xml:space="preserve">
    <value>filter keys</value>
  </data>
  <data name="StringHideTranslated" xml:space="preserve">
    <value>hide translated</value>
  </data>
  <data name="StringImport" xml:space="preserve">
    <value>import</value>
  </data>
  <data name="StringImportDialogTitle" xml:space="preserve">
    <value>import translations from JSON</value>
  </data>
  <data name="StringIn" xml:space="preserve">
    <value>in</value>
  </data>
  <data name="StringKeyCap" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="StringMergeValueCap" xml:space="preserve">
    <value>MergeValue</value>
  </data>
  <data name="StringName" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="StringNavigationCap" xml:space="preserve">
    <value>Navigation</value>
  </data>
  <data name="StringNew" xml:space="preserve">
    <value>new</value>
  </data>
  <data name="StringSearch" xml:space="preserve">
    <value>search</value>
  </data>
  <data name="StringSearchFor" xml:space="preserve">
    <value>search for</value>
  </data>
  <data name="StringSelected" xml:space="preserve">
    <value>selected</value>
  </data>
  <data name="StringSelectFile" xml:space="preserve">
    <value>select
file</value>
  </data>
  <data name="StringSession" xml:space="preserve">
    <value>session</value>
  </data>
  <data name="StringSessionManagementCap" xml:space="preserve">
    <value>Session Management</value>
  </data>
  <data name="StringSessionsCap" xml:space="preserve">
    <value>Session(s)</value>
  </data>
  <data name="StringSettingsCap" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="StringShowOnlyTranslated" xml:space="preserve">
    <value>only show translated</value>
  </data>
  <data name="StringStartCap" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StringToolsCap" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="StringTranslationCap" xml:space="preserve">
    <value>Translation</value>
  </data>
  <data name="StringTranslationSessionLocaleEnglish" xml:space="preserve">
    <value>localename in english</value>
  </data>
  <data name="StringTranslationSessionLocaleLocalized" xml:space="preserve">
    <value>localename localized</value>
  </data>
  <data name="StringTranslationSessionMergeFile" xml:space="preserve">
    <value>localization file to merge with</value>
  </data>
  <data name="StringTranslationSessionOverwriteFile" xml:space="preserve">
    <value>localization file to overwrite</value>
  </data>
  <data name="StringTranslationSessions" xml:space="preserve">
    <value>translation sessions (selected ones is current)</value>
  </data>
</root>