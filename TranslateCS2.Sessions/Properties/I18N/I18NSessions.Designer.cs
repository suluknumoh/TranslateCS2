//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TranslateCS2.Sessions.Properties.I18N {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class I18NSessions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal I18NSessions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TranslateCS2.Sessions.Properties.I18N.I18NSessions", typeof(I18NSessions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session Management.
        /// </summary>
        public static string Caption {
            get {
                return ResourceManager.GetString("Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really want to delete the selected session?.
        /// </summary>
        public static string DialogDeleteText {
            get {
                return ResourceManager.GetString("DialogDeleteText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete selected session.
        /// </summary>
        public static string DialogDeleteTitle {
            get {
                return ResourceManager.GetString("DialogDeleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cancel.
        /// </summary>
        public static string DoCancel {
            get {
                return ResourceManager.GetString("DoCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create
        ///new
        ///session.
        /// </summary>
        public static string DoCreate {
            get {
                return ResourceManager.GetString("DoCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete
        ///selected
        ///session.
        /// </summary>
        public static string DoDelete {
            get {
                return ResourceManager.GetString("DoDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to edit
        ///selected
        ///session.
        /// </summary>
        public static string DoEdit {
            get {
                return ResourceManager.GetString("DoEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to save.
        /// </summary>
        public static string DoSave {
            get {
                return ResourceManager.GetString("DoSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to localename in english.
        /// </summary>
        public static string InputLocaleEnglish {
            get {
                return ResourceManager.GetString("InputLocaleEnglish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to localename in english;
        ///the drop down lists all supported (available in co&apos;s mscorlib AND mappable to a UnityEngine.SystemLanguage) languages english names
        ///
        ///it is searchable
        ///and
        ///it is strongly recommended to select an appropriate english name, because the english name is also used to gather filename proposals for exports
        ///
        ///selecting/changing the english name changes the localename localized respectively
        ///
        ///below the drop down, the current english name is shown to provide backward-compatibility.
        /// </summary>
        public static string InputLocaleEnglishTip {
            get {
                return ResourceManager.GetString("InputLocaleEnglishTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to localename localized.
        /// </summary>
        public static string InputLocaleLocalized {
            get {
                return ResourceManager.GetString("InputLocaleLocalized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to localename localized;
        ///the drop down lists all supported (available in co&apos;s mscorlib AND mappable to a UnityEngine.SystemLanguage) languages native names
        ///
        ///it is searchable
        ///as long as no english name is selected, selecting/changing the native name changes the localename in english respectively
        ///
        ///the textbox below the drop down shows the current localename localized
        ///
        ///it also allows you to specify your own name to use it while exporting via the add Key checkbox
        ///especially for those who would like to cre [rest of string was truncated]&quot;;.
        /// </summary>
        public static string InputLocaleLocalizedTip {
            get {
                return ResourceManager.GetString("InputLocaleLocalizedTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to localization file to merge with.
        /// </summary>
        public static string InputMergeFile {
            get {
                return ResourceManager.GetString("InputMergeFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if you only want to change some translations,
        ///tanslations within this file and yours are going to be merged;
        ///or if you want to create a new translation e.g. based on english,
        ///you&apos;ll get a mixed translation file;
        ///should be another language than the ones you want to merge;.
        /// </summary>
        public static string InputMergeFileTip {
            get {
                return ResourceManager.GetString("InputMergeFileTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name.
        /// </summary>
        public static string InputName {
            get {
                return ResourceManager.GetString("InputName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a name for your translation session.
        /// </summary>
        public static string InputNameTip {
            get {
                return ResourceManager.GetString("InputNameTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to localization file to overwrite.
        /// </summary>
        public static string InputOverwriteFile {
            get {
                return ResourceManager.GetString("InputOverwriteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select none, if you only want to export as JSON
        ///
        ///otherwise, the localization file you want to sacrifice/overwrite.
        ///should be another language than english
        ///and the ones you want to merge;
        ///a language that you are unable to read/speak;
        ///so you always have an ingame-fallback without the need to verify your installation files;.
        /// </summary>
        public static string InputOverwriteFileTip {
            get {
                return ResourceManager.GetString("InputOverwriteFileTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to translation sessions (selected ones is current).
        /// </summary>
        public static string InputSelectSession {
            get {
                return ResourceManager.GetString("InputSelectSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to autodetected .loc-files.
        /// </summary>
        public static string OutputAutoDetectedLocFiles {
            get {
                return ResourceManager.GetString("OutputAutoDetectedLocFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID.
        /// </summary>
        public static string OutputID {
            get {
                return ResourceManager.GetString("OutputID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to autodetected Cities: Skylines 2 - Installation Directory.
        /// </summary>
        public static string OutputInstallationDirectory {
            get {
                return ResourceManager.GetString("OutputInstallationDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to last edited.
        /// </summary>
        public static string OutputLastEdited {
            get {
                return ResourceManager.GetString("OutputLastEdited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to started.
        /// </summary>
        public static string OutputStarted {
            get {
                return ResourceManager.GetString("OutputStarted", resourceCulture);
            }
        }
    }
}
